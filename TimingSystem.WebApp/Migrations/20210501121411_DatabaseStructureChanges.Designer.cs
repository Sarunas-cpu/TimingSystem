// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimingSystem.WebApp.Database;

namespace TimingSystem.WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210501121411_DatabaseStructureChanges")]
    partial class DatabaseStructureChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Participants", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParticipantNr")
                        .HasColumnType("int");

                    b.Property<int?>("TournamentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TournamentId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("DriveTime")
                        .HasColumnType("time");

                    b.Property<int>("Heat")
                        .HasColumnType("int");

                    b.Property<int?>("ParticipantsId")
                        .HasColumnType("int");

                    b.Property<string>("PenaltyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("PenaltyDuration")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ParticipantsId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Tournament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Participants", b =>
                {
                    b.HasOne("TimingSystem.WebApp.Database.Entities.Tournament", null)
                        .WithMany("Participants")
                        .HasForeignKey("TournamentId");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Time", b =>
                {
                    b.HasOne("TimingSystem.WebApp.Database.Entities.Participants", null)
                        .WithMany("Times")
                        .HasForeignKey("ParticipantsId");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimingSystem.WebApp.Database;

namespace TimingSystem.WebApp.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200827140511_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Penalty", b =>
                {
                    b.Property<int>("PenaltyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TournamentRefId")
                        .HasColumnType("int");

                    b.HasKey("PenaltyId");

                    b.HasIndex("TournamentRefId");

                    b.ToTable("Penalties");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Time", b =>
                {
                    b.Property<int>("TimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("DriveTime")
                        .HasColumnType("time");

                    b.Property<int>("TournamentRefId")
                        .HasColumnType("int");

                    b.HasKey("TimeId");

                    b.HasIndex("TournamentRefId");

                    b.ToTable("Times");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Tournament", b =>
                {
                    b.Property<int>("TournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticipantLastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TournamentId");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Penalty", b =>
                {
                    b.HasOne("TimingSystem.WebApp.Database.Entities.Tournament", "Tournament")
                        .WithMany("Penalties")
                        .HasForeignKey("TournamentRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimingSystem.WebApp.Database.Entities.Time", b =>
                {
                    b.HasOne("TimingSystem.WebApp.Database.Entities.Tournament", "Tournament")
                        .WithMany("Times")
                        .HasForeignKey("TournamentRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
